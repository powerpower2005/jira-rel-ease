name: Update Jira Fix Version

on:
  workflow_dispatch:
    inputs:
      version:
        description: '릴리스 버전 (예: 1.2.0)'
        required: true
      repo:
        description: '추적할 레포지토리 (예: owner/repo)'
        required: true

jobs:
  checkout:
    runs-on: ubuntu-latest
    outputs:
      repo-path: target-repo
    steps:
      - name: Clone repository
        run: |
          git clone --depth=1 "https://github.com/${{ github.event.inputs.repo }}.git" target-repo
          cd target-repo && git fetch --tags

  extract:
    runs-on: ubuntu-latest
    needs: checkout
    outputs:
      tickets: ${{ steps.extract.outputs.tickets }}
      slack-message: ${{ steps.extract.outputs.slack-message }}
    steps:
      - name: Extract Jira tickets from commits
        id: extract
        run: |
          VERSION="${{ github.event.inputs.version }}"
          DEV_VERSION="v${VERSION}-dev"
          VERSION_TAG="v${VERSION}"
          TICKET_PATTERN='[A-Z][A-Z0-9]+-[0-9]+'

          git -C target-repo rev-parse "$DEV_VERSION" >/dev/null 2>&1 || {
            echo "slack-message=❌ 태그 $DEV_VERSION 이 존재하지 않습니다." >> $GITHUB_OUTPUT
            exit 1
          }

          git -C target-repo rev-parse "$VERSION_TAG" >/dev/null 2>&1 || {
            echo "slack-message=❌ 태그 $VERSION_TAG 이 존재하지 않습니다." >> $GITHUB_OUTPUT
            exit 1
          }

          COMMITS=$(git -C target-repo log --pretty=format:"%s" ${DEV_VERSION}..${VERSION_TAG})

          if [[ -z "$COMMITS" ]]; then
            echo "slack-message=⚠️ ${DEV_VERSION} ~ ${VERSION_TAG} 사이에 커밋이 없습니다." >> $GITHUB_OUTPUT
            echo "tickets=" >> $GITHUB_OUTPUT
            exit 0
          fi

          TICKETS=$(echo "$COMMITS" | grep -o -E "$TICKET_PATTERN" | sort -u | tr '\n' ' ')
          echo "tickets=$TICKETS" >> $GITHUB_OUTPUT
          echo "slack-message=🔍 Jira 티켓 추출 완료: $TICKETS" >> $GITHUB_OUTPUT

  jira-update:
    runs-on: ubuntu-latest
    needs: extract
    environment:
      name: jira
    outputs:
      slack-message: ${{ steps.update.outputs.slack-message }}
    steps:
      - name: Update Jira Fix Versions
        id: update
        env:
          DOMAIN: ${{ secrets.DOMAIN }}
          USER: ${{ secrets.USER }}
          API_TOKEN: ${{ secrets.API_TOKEN }}
          VERSION: ${{ github.event.inputs.version }}
        run: |
          IFS=' ' read -ra TICKETS <<< "${{ needs.extract.outputs.tickets }}"
          if [[ -z "${TICKETS[*]}" ]]; then
            echo "slack-message=${{ needs.extract.outputs.slack-message }}" >> $GITHUB_OUTPUT
            exit 0
          fi

          FAILED_TICKETS=()
          for TICKET in "${TICKETS[@]}"; do
            RESPONSE=$(curl -s -w "%{http_code}" -o response.json -u "$USER:$API_TOKEN" \
              -X PUT \
              -H "Content-Type: application/json" \
              --data "{\"update\":{\"fixVersions\":[{\"add\":{\"name\":\"$VERSION\"}}]}}" \
              "$DOMAIN/rest/api/2/issue/$TICKET")

            if [[ "$RESPONSE" == "204" ]]; then
              echo "✅ $TICKET updated"
            elif [[ "$RESPONSE" == "401" || "$RESPONSE" == "403" ]]; then
              echo "slack-message=❌ Jira 인증 실패 ($RESPONSE) - 사용자 또는 토큰 확인 필요" >> $GITHUB_OUTPUT
              exit 1
            else
              FAILED_TICKETS+=("$TICKET")
            fi
            sleep 1
          done

          if [[ ${#FAILED_TICKETS[@]} -ne 0 ]]; then
            echo "slack-message=⚠️ 일부 티켓 실패: ${FAILED_TICKETS[*]}" >> $GITHUB_OUTPUT
            exit 1
          fi

          echo "slack-message=🎉 Jira Fix Version 업데이트 완료: ${TICKETS[*]}" >> $GITHUB_OUTPUT

  slack-notify:
    runs-on: ubuntu-latest
    needs: [extract, jira-update]
    environment:
      name: slack
    steps:
      - name: Send Slack Message
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: >-
            ${{ needs.jira-update.result == 'success' && needs.jira-update.outputs.slack-message || needs.extract.outputs.slack-message }}
        run: |
          curl -X POST --data-urlencode "payload={
            \"username\": \"jira-bot\",
            \"text\": \"$SLACK_MESSAGE\",
            \"icon_emoji\": \":robot_face:\"
          }" "$SLACK_WEBHOOK"
