name: Update Jira Fix Version

on:
  workflow_dispatch:
    inputs:
      version:
        description: '릴리스 버전 (예: 1.2.0)'
        required: true
      repo:
        description: '추적할 레포지토리 (예: org/repo)'
        required: true

jobs:
  update-fix-versions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout target repository
        run: |
          git clone --depth=1 "https://github.com/${{ github.event.inputs.repo }}.git" target-repo
          cd target-repo && git fetch --tags

      - name: Notify - Checkout 완료
        if: success()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{
            \"text\": \"📦 저장소 \`${{ github.event.inputs.repo }}\` 체크아웃 완료\"
          }" "$SLACK_WEBHOOK_URL"

      - name: Extract commits and Jira tickets
        id: extract
        run: |
          VERSION="${{ github.event.inputs.version }}"
          DEV_VERSION="v${VERSION}-dev"
          TICKET_PATTERN='[A-Z][A-Z0-9]+-[0-9]+'

          COMMITS=$(git -C target-repo log --pretty=format:"%s" ${DEV_VERSION}..${VERSION})
          TICKETS=$(echo "$COMMITS" | grep -o -E "$TICKET_PATTERN" | sort -u | tr '\n' ' ')
          echo "tickets=$TICKETS" >> $GITHUB_OUTPUT

      - name: Notify - 커밋 및 Jira 티켓 추출 완료
        if: success()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{
            \"text\": \"🔍 커밋 및 Jira 티켓 추출 완료\"
          }" "$SLACK_WEBHOOK_URL"

      - name: Update Jira Fix Versions
        id: update-jira
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER: ${{ secrets.JIRA_USER }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          VERSION: ${{ github.event.inputs.version }}
        run: |
          IFS=' ' read -ra TICKETS <<< "${{ steps.extract.outputs.tickets }}"
          FAILED_TICKETS=()

          for TICKET in "${TICKETS[@]}"; do
            RESPONSE=$(curl -s -w "%{http_code}" -o response.json -u "$JIRA_USER:$JIRA_API_TOKEN" \
              -X PUT \
              -H "Content-Type: application/json" \
              --data "{\"update\":{\"fixVersions\":[{\"add\":{\"name\":\"$VERSION\"}}]}}" \
              "$JIRA_BASE_URL/rest/api/2/issue/$TICKET")

            if [[ "$RESPONSE" == "204" ]]; then
              echo "✅ $TICKET updated"
            else
              echo "❌ $TICKET failed"
              cat response.json
              FAILED_TICKETS+=("$TICKET")
            fi
            sleep 1
          done

          if [[ ${#FAILED_TICKETS[@]} -ne 0 ]]; then
            echo "SLACK_MESSAGE=⚠️ Jira 업데이트 실패: ${FAILED_TICKETS[*]}" >> $GITHUB_ENV
            exit 1
          fi

          echo "SLACK_MESSAGE=🎉 Jira Fix Version 업데이트 완료: ${TICKETS[*]}" >> $GITHUB_ENV

      - name: Notify - Jira 업데이트 성공
        if: success() && steps.update-jira.conclusion == 'success'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_MESSAGE: ${{ env.SLACK_MESSAGE }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{
            \"text\": \"$SLACK_MESSAGE\"
          }" "$SLACK_WEBHOOK_URL"

      - name: Notify - Jira 업데이트 실패
        if: failure() && steps.update-jira.conclusion == 'failure'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_MESSAGE: ${{ env.SLACK_MESSAGE }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{
            \"text\": \"$SLACK_MESSAGE\"
          }" "$SLACK_WEBHOOK_URL"

      - name: Notify - 전체 완료
        if: success()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{
            \"text\": \"✅ 전체 워크플로우 완료\"
          }" "$SLACK_WEBHOOK_URL"

      - name: Notify - 전체 실패
        if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{
            \"text\": \"❌ 워크플로우 실패. 상세 로그를 확인하세요.\"
          }" "$SLACK_WEBHOOK_URL"
